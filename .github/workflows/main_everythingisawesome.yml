# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - everythingisawesome

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install root dependencies
        run: npm install

      - name: Install client dependencies
        run: cd client && npm install

      - name: Build client application
        run: cd client && npm run build

      - name: Create required directories
        run: |
          mkdir -p data
          mkdir -p data/generated-images
          echo "Data and generated-images directories created"

      - name: Test application
        run: npm run test --if-present
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: windows-latest
    needs: build
    
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B2D34B457FC84DBD932B2B893BCAB313 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6037D42E5BA0405EA75FC80408338126 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F976DF1D680446ECA0330678241B7509 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'everythingisawesome'
          slot-name: 'Production'
          package: .
          clean: false

      - name: 'Configure Node.js Runtime'
        shell: bash
        run: |
          # Find the resource group
          RESOURCE_GROUP=$(az webapp list --query "[?name=='everythingisawesome'].resourceGroup" -o tsv)
          echo "Configuring Node.js runtime for resource group: $RESOURCE_GROUP"
          
          # Configure for Windows Node.js with explicit startup file
          az webapp config set \
            --name everythingisawesome \
            --resource-group "$RESOURCE_GROUP" \
            --startup-file "app.js"
            
          # Set Node.js specific configurations
          az webapp config appsettings set \
            --name everythingisawesome \
            --resource-group "$RESOURCE_GROUP" \
            --settings \
              WEBSITE_NODE_DEFAULT_VERSION=~22 \
              WEBSITE_RUN_FROM_PACKAGE=0 \
              SCM_DO_BUILD_DURING_DEPLOYMENT=false \
              IISNODE_yml="iisnode.yml" \
              WEBSITE_HTTPLOGGING_RETENTION_DAYS=3
            
          echo "Node.js runtime configured"

      - name: 'Configure Azure Web App Settings'
        shell: bash
        run: |
          # Find the resource group by listing all web apps and filtering by name
          echo "Finding resource group for web app 'everythingisawesome'..."
          RESOURCE_GROUP=$(az webapp list --query "[?name=='everythingisawesome'].resourceGroup" -o tsv)
          
          if [ -z "$RESOURCE_GROUP" ]; then
            echo "Error: Could not find resource group for web app 'everythingisawesome'"
            echo "Available web apps:"
            az webapp list --query "[].{name:name, resourceGroup:resourceGroup}" -o table
            exit 1
          fi
          
          echo "Found resource group: $RESOURCE_GROUP"
          
          # Set application settings
          az webapp config appsettings set \
            --name everythingisawesome \
            --resource-group "$RESOURCE_GROUP" \
            --settings \
              NODE_ENV=production \
              GROK_API_KEY="${{ secrets.GROK_API_KEY }}" \
              NEWS_API_KEY="${{ secrets.NEWS_API_KEY }}"
              
          # Force restart to apply all changes
          az webapp restart \
            --name everythingisawesome \
            --resource-group "$RESOURCE_GROUP"
            
          echo "App settings configured and app restarted"

      - name: 'Verify Application Type in Azure'
        shell: bash
        run: |
          # Find the resource group
          RESOURCE_GROUP=$(az webapp list --query "[?name=='everythingisawesome'].resourceGroup" -o tsv)
          
          # Check current app settings
          echo "Current app settings:"
          az webapp config appsettings list \
            --name everythingisawesome \
            --resource-group "$RESOURCE_GROUP" \
            --query "[?name=='WEBSITE_NODE_DEFAULT_VERSION' || name=='SCM_DO_BUILD_DURING_DEPLOYMENT' || name=='WEBSITE_RUN_FROM_PACKAGE']" \
            -o table
            
          # Check startup command
          echo "Current startup command:"
          az webapp config show \
            --name everythingisawesome \
            --resource-group "$RESOURCE_GROUP" \
            --query "appCommandLine" \
            -o tsv
